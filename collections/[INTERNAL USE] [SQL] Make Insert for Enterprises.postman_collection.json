{
	"info": {
		"_postman_id": "35304a1d-0178-49c9-9f42-ecffcd71c8c4",
		"name": "[INTERNAL USE] [SQL] Make Insert for Enterprises",
		"description": "This collection creates the SQL inserts for tables:\n\n- PTCM_OBJ.tbptcm_movim_carte\n    \n\n- ptcm_obj.TBPTCM_ANAG_CARTE\n    \n\nto be used to add a brand new enterprise cards to the DB (SION).\n\nInput field is INPUT_data, which is a JSON array. This input filed perfectly fit with the output of the collection: \"Get PAN Alias, ABI, POSI and User details\" (current id \"18019665-8503bfa1-87ed-4281-9d40-168edfa96905\" in \"Team Workspace\").\n\nOutput is stored in RESULT collection variable.\n\nIn this collection the output result could be paginated. Page size is given by the \"resultPageSize\". Each result page is stored in a RESULTX collection variable, where X is an integer from 1 to N.\n\nReference Ticket: [https://icbpijira.atlassian.net/browse/CPN-6499]()\n\n[NOTE:]() is possible to add some exceptions to the placeholder substitution, using the collection collection variable 'placeholderExceptions' in JSON format as follow, e.g.:\n\n{ \"Car att\": {\"placeholder\":\"\\[\\[FL_CAR_ATT\\]\\]\",\"value\": \"S\"}, \"Car attivazione\": {\"placeholder\":\"\\[\\[FL_CAR_ATTIVAZIONE\\]\\]\",\"value\": \"S\"}}",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18019665",
		"_collection_link": "https://team-nexi-alten.postman.co/workspace/Team-Workspace~d73c1392-e276-429a-830d-648e8e808912/collection/18019665-35304a1d-0178-49c9-9f42-ecffcd71c8c4?action=share&creator=18019665&source=collection_link"
	},
	"item": [
		{
			"name": "2 - Check INPUT",
			"item": [
				{
					"name": "Check INPUT parameters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Check collection variable INPUT field values\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//console.clear();",
									"",
									"pm.collectionVariables.set(\"dataList\", JSON.stringify(JSON.parse(pm.collectionVariables.get(\"INPUT_data\")), null, 0));",
									"pm.collectionVariables.set(\"currentResultVariableName\", pm.collectionVariables.get(\"defaultResultVariableName\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4 - Preset",
			"item": [
				{
					"name": "Preset FC variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Preset input Data value\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const dataList = JSON.parse(pm.collectionVariables.get(\"dataList\"));",
									"",
									"if(Array.isArray(dataList) && !dataList.length) {",
									"    console.error(\"ERROR: Account list is empty, please check INPUT values!\");",
									"    postman.setNextRequest(null);",
									"}",
									"",
									"pm.collectionVariables.set(\"dataFullLength\", dataList.length);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5 - Start loop",
			"item": [
				{
					"name": "Start",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var dataList = JSON.parse(pm.collectionVariables.get(\"dataList\"));",
									"",
									"var accountData = dataList.shift();",
									"",
									"const dataFullLength = parseInt(pm.collectionVariables.get(\"dataFullLength\"));",
									"const dataListLength = dataList.length;",
									"const currentDataProcessIndex = dataFullLength - dataListLength;",
									"console.info(`Process ${currentDataProcessIndex}/${dataFullLength}`);",
									"pm.collectionVariables.set(\"currentDataProcessIndex\", currentDataProcessIndex);",
									"",
									"pm.collectionVariables.set(\"dataList\", JSON.stringify(dataList));",
									"pm.collectionVariables.set(\"accountData\", JSON.stringify(accountData));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// check response status",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									"const accountData = JSON.parse(pm.collectionVariables.get(\"accountData\"));",
									"console.info(`Process fiscal code: '${accountData[\"Fiscal code\"]}'`);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						},
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "MT_APPLICATION",
								"value": "{{MT_APPLICATION}}",
								"type": "text"
							},
							{
								"key": "MT_CHANNEL",
								"value": "{{MT_CHANNEL}}",
								"type": "text"
							},
							{
								"key": "MT_USER",
								"value": "{{MT_USER}}",
								"type": "text"
							},
							{
								"key": "MT_COMPANY",
								"value": "{{MT_COMPANY}}",
								"type": "text"
							},
							{
								"key": "MT_COMPANY_GROUP",
								"value": "{{MT_COMPANY_GROUP}}",
								"type": "text"
							},
							{
								"key": "MT_PARTNER",
								"value": "{{MT_PARTNER}}",
								"type": "text"
							},
							{
								"key": "MT_REQUEST_ID",
								"value": "{{MT_REQUEST_ID}}",
								"type": "text"
							},
							{
								"key": "MT_SESSION_ID",
								"value": "{{MT_SESSION_ID}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fiscalCode\": \"{{fc}}\",\n    \"positionType\": {{INPUT_positionType}}\n}"
						},
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set storage variable name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const currentDataProcessIndex = parseInt(pm.collectionVariables.get(\"currentDataProcessIndex\"));",
									"const resultPageSize = parseInt(pm.collectionVariables.get(\"resultPageSize\"));",
									"const isPaginationReached = currentDataProcessIndex % resultPageSize;",
									"",
									"if(isPaginationReached === 0) {",
									"    const pagination = parseInt(pm.collectionVariables.get(\"pagination\"));",
									"    const newResultVariableName = `${pm.collectionVariables.get(\"defaultResultVariableName\")}${pagination}`",
									"    pm.collectionVariables.set(newResultVariableName, \"\");",
									"    pm.collectionVariables.set(\"currentResultVariableName\", newResultVariableName);",
									"    pm.collectionVariables.set(\"pagination\", pagination + 1);",
									"}",
									"",
									"console.info(`Set storage variable name: '${pm.collectionVariables.get(\"currentResultVariableName\")}'`);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "6 - Replace placeholders",
			"item": [
				{
					"name": "Replace Anag Carte",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Replace placeholders Anag Carte\");",
									"",
									"const accountData = JSON.parse(pm.collectionVariables.get(\"accountData\"));",
									"const placeholders = JSON.parse(pm.collectionVariables.get(\"placeholders\"));",
									"",
									"const templateAnagCarte = pm.collectionVariables.get(\"templateAnagCarte\");",
									"",
									"// need to correclty manage the translation from '09' to 'SEP'",
									"// date.toLocaleDateString('en-GB', {month: 'short'}) nativelly translate '09' to 'SEPT'",
									"const dateFormatter = (dateString) => {",
									"    const date = new Date(dateString);",
									"    const day = date.toLocaleDateString('en-GB', {day: 'numeric'});",
									"    const month = date.toLocaleDateString('en-GB', {month: 'short'})",
									"                      .substring(0, 3);",
									"    const year = date.toLocaleDateString('en-GB', {year: 'numeric'});",
									"",
									"    return `${day}-${month}-${year}`.replace(/ /g, '-').toLocaleUpperCase();",
									"}",
									"",
									"let anagCarte = templateAnagCarte;",
									"Object.keys(accountData).each(key => {",
									"    let replaceValue = \"\";",
									"    if([\"Expiring date\", \"Validity start date\"].includes(key)) {",
									"        replaceValue = dateFormatter(accountData[key]);",
									"    }",
									"    else {",
									"        replaceValue = [\"Expense limit ana\", \"Expense limit posi\"].includes(key)?",
									"            replaceValue = accountData[key][\"value\"] :",
									"            replaceValue = accountData[key];",
									"    }",
									"",
									"    anagCarte = anagCarte.replace(`${placeholders[key]}`, replaceValue);",
									"});",
									"",
									"pm.collectionVariables.set(\"anagCarte\", anagCarte);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Manage exceptions Anag Carte",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Manage exceptions Anag Carte\");",
									"",
									"const anagCarte = pm.collectionVariables.get(\"anagCarte\");",
									"const placeholdersExceptions = JSON.parse(pm.collectionVariables.get(\"placeholdersExceptions\"));",
									"",
									"let anagCarteWithExceptions = anagCarte;",
									"Object.keys(placeholdersExceptions)",
									"        .map(plhKey => placeholdersExceptions[plhKey])",
									"        .each(plh => anagCarteWithExceptions = anagCarteWithExceptions.replace(plh.placeholder, plh.value));",
									"",
									"pm.collectionVariables.set(\"anagCarteWithExceptions\", anagCarteWithExceptions);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace Movim Carte",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Replace placeholders Movim Carte\");",
									"",
									"const accountData = JSON.parse(pm.collectionVariables.get(\"accountData\"));",
									"const placeholders = JSON.parse(pm.collectionVariables.get(\"placeholders\"));",
									"",
									"const templateMovimCarte = pm.collectionVariables.get(\"templateMovimCarte\");",
									"",
									"let movimCarte = templateMovimCarte;",
									"Object.keys(accountData).each(key => {",
									"    let replaceValue = \"\";",
									"    if([\"Expiring date\", \"Validity start date\"].includes(key)) {",
									"        let date = new Date(accountData[key]);",
									"        replaceValue = date.toLocaleDateString('en-GB', {",
									"                    day: 'numeric', month: 'short', year: 'numeric'",
									"                }).replace(/ /g, '-').toLocaleUpperCase();",
									"    }",
									"    else {",
									"        if([\"Expense limit ana\", \"Expense limit posi\"].includes(key)) {",
									"            replaceValue = accountData[key][\"value\"];",
									"        } else {",
									"            replaceValue = accountData[key];",
									"        }",
									"    }",
									"    ",
									"    movimCarte = movimCarte.replace(`${placeholders[key]}`, replaceValue);",
									"});",
									"",
									"pm.collectionVariables.set(\"movimCarte\", movimCarte);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "10 - Get inserts",
			"item": [
				{
					"name": "Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Get both inserts\");",
									"",
									"const anagCarte = pm.collectionVariables.get(\"anagCarteWithExceptions\");",
									"const movimCarte = pm.collectionVariables.get(\"movimCarte\");",
									"",
									"const bothInserts = [];",
									"bothInserts.push(anagCarte);",
									"bothInserts.push(movimCarte);",
									"",
									"pm.collectionVariables.set(\"bothInserts\", JSON.stringify(bothInserts));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "15 - Update report",
			"item": [
				{
					"name": "Join inserts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Join inserts\");",
									"",
									"const bothInserts = JSON.parse(pm.collectionVariables.get(\"bothInserts\"));",
									"",
									"pm.collectionVariables.set(\"insertsJoin\", bothInserts.join(\"\\n\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace nulls",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.info(\"Replace nulls\");",
									"",
									"const insertsJoin = pm.collectionVariables.get(\"insertsJoin\");",
									"",
									"pm.collectionVariables.set(\"insertsReplaceNulls\", insertsJoin.replaceAll(\"'null'\", \"NULL\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				},
				{
					"name": "Write result",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const currentResultVariableName = pm.collectionVariables.get(\"currentResultVariableName\");",
									"console.info(`Write result to: '${currentResultVariableName}'`);",
									"",
									"const currentResult = pm.collectionVariables.get(currentResultVariableName);",
									"const newResult = pm.collectionVariables.get(\"insertsReplaceNulls\");",
									"",
									"// checking the entire string to see if there's only whitespace",
									"let result = \"\";",
									"if (currentResult === null || currentResult.trim() === \"\") {",
									"    result = newResult;",
									"} else {",
									"    result = currentResult + \"\\n\" + newResult;",
									"}",
									"",
									"pm.collectionVariables.set(currentResultVariableName, result);",
									"",
									"pm.collectionVariables.unset(\"insertsReplaceNulls\");",
									"pm.collectionVariables.unset(\"insertsJoin\");",
									"pm.collectionVariables.unset(\"bothInserts\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var dataList = JSON.parse(pm.collectionVariables.get(\"dataList\"));",
									"",
									"if(dataList && dataList.length > 0) {",
									"    postman.setNextRequest(\"Start\");",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/get",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwtToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "INPUT_data",
			"value": "[  {\n    \"Fiscal code\": \"SCRCRL70A01F205G\",\n    \"Bin\": \"497018\",\n    \"Tail\": \"9000\",\n    \"Processor\": \"S\",\n    \"Affinity\": \"87\",\n    \"ABI\": \"03032\",\n    \"Pan alias\": \"0100000900275937\",\n    \"SMSMobile\": \"SMS mobile not linked!\",\n    \"ACSMobile\": \"ACS mobile not linked!\",\n    \"Username\": \"\",\n    \"User type\": \"\",\n    \"Account\": \"\",\n    \"User Id\": \"\",\n    \"Iam Id\": \"\",\n    \"Cod-Rap\": \"030320008082\",\n    \"Expiring date\": \"2027-11-30\",\n    \"PIVA\": \"01600950842\",\n    \"Bank Name\": \"CREDITO EMILIANO SPA\",\n    \"Position Id\": \"8082\",\n    \"Account holder name posi\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Bank account\": null,\n    \"Expense limit posi\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Source subsystem posi\": \"C\",\n    \"Validity state posi\": \"V\",\n    \"Source subsytem car\": \"C\",\n    \"Validity start date\": \"2023-01-17\",\n    \"Car att\": \"N\",\n    \"Product description affinity\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Product Id\": \"030328700VC\",\n    \"Product description prod EN\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Code Person\": \"00\",\n    \"Circuit code\": \"V\",\n    \"Circuit detail\": \"VISA\",\n    \"Validity state\": \"V\",\n    \"Account holder name ana\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Source subsystems ana\": \"C\",\n    \"Expense limit ana\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Offline block type\": null,\n    \"Offline block date\": null,\n    \"Offline block description\": null,\n    \"Car attivazione\": \"N\"\n  },\n  {\n    \"Fiscal code\": \"SRBGNI70A01F205A\",\n    \"Bin\": \"497018\",\n    \"Tail\": \"2871\",\n    \"Processor\": \"S\",\n    \"Affinity\": \"87\",\n    \"ABI\": \"03032\",\n    \"Pan alias\": \"0100000900276017\",\n    \"SMSMobile\": \"SMS mobile not linked!\",\n    \"ACSMobile\": \"ACS mobile not linked!\",\n    \"Username\": \"\",\n    \"User type\": \"\",\n    \"Account\": \"\",\n    \"User Id\": \"\",\n    \"Iam Id\": \"\",\n    \"Cod-Rap\": \"030320008083\",\n    \"Expiring date\": \"2027-11-30\",\n    \"PIVA\": \"01600950842\",\n    \"Bank Name\": \"CREDITO EMILIANO SPA\",\n    \"Position Id\": \"8083\",\n    \"Account holder name posi\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Bank account\": null,\n    \"Expense limit posi\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Source subsystem posi\": \"C\",\n    \"Validity state posi\": \"V\",\n    \"Source subsytem car\": \"C\",\n    \"Validity start date\": \"2023-01-17\",\n    \"Car att\": \"N\",\n    \"Product description affinity\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Product Id\": \"030328700VC\",\n    \"Product description prod EN\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Code Person\": \"00\",\n    \"Circuit code\": \"V\",\n    \"Circuit detail\": \"VISA\",\n    \"Validity state\": \"V\",\n    \"Account holder name ana\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Source subsystems ana\": \"C\",\n    \"Expense limit ana\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Offline block type\": null,\n    \"Offline block date\": null,\n    \"Offline block description\": null,\n    \"Car attivazione\": \"N\"\n  },\n  {\n    \"Fiscal code\": \"RFNMRC77A01F205Z\",\n    \"Bin\": \"497018\",\n    \"Tail\": \"1695\",\n    \"Processor\": \"S\",\n    \"Affinity\": \"87\",\n    \"ABI\": \"03032\",\n    \"Pan alias\": \"0100000900275983\",\n    \"SMSMobile\": \"SMS mobile not linked!\",\n    \"ACSMobile\": \"ACS mobile not linked!\",\n    \"Username\": \"\",\n    \"User type\": \"\",\n    \"Account\": \"\",\n    \"User Id\": \"\",\n    \"Iam Id\": \"\",\n    \"Cod-Rap\": \"030320008084\",\n    \"Expiring date\": \"2027-11-30\",\n    \"PIVA\": \"01600950842\",\n    \"Bank Name\": \"CREDITO EMILIANO SPA\",\n    \"Position Id\": \"8084\",\n    \"Account holder name posi\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Bank account\": null,\n    \"Expense limit posi\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Source subsystem posi\": \"C\",\n    \"Validity state posi\": \"V\",\n    \"Source subsytem car\": \"C\",\n    \"Validity start date\": \"2023-01-17\",\n    \"Car att\": \"N\",\n    \"Product description affinity\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Product Id\": \"030328700VC\",\n    \"Product description prod EN\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Code Person\": \"00\",\n    \"Circuit code\": \"V\",\n    \"Circuit detail\": \"VISA\",\n    \"Validity state\": \"V\",\n    \"Account holder name ana\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Source subsystems ana\": \"C\",\n    \"Expense limit ana\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Offline block type\": null,\n    \"Offline block date\": null,\n    \"Offline block description\": null,\n    \"Car attivazione\": \"N\"\n  },\n  {\n    \"Fiscal code\": \"BSCRNT79A01F205Z\",\n    \"Bin\": \"497018\",\n    \"Tail\": \"5169\",\n    \"Processor\": \"S\",\n    \"Affinity\": \"87\",\n    \"ABI\": \"03032\",\n    \"Pan alias\": \"0100000900275969\",\n    \"SMSMobile\": \"SMS mobile not linked!\",\n    \"ACSMobile\": \"ACS mobile not linked!\",\n    \"Username\": \"\",\n    \"User type\": \"\",\n    \"Account\": \"\",\n    \"User Id\": \"\",\n    \"Iam Id\": \"\",\n    \"Cod-Rap\": \"030320008085\",\n    \"Expiring date\": \"2027-11-30\",\n    \"PIVA\": \"01600950842\",\n    \"Bank Name\": \"CREDITO EMILIANO SPA\",\n    \"Position Id\": \"8085\",\n    \"Account holder name posi\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Bank account\": null,\n    \"Expense limit posi\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Source subsystem posi\": \"C\",\n    \"Validity state posi\": \"V\",\n    \"Source subsytem car\": \"C\",\n    \"Validity start date\": \"2023-01-17\",\n    \"Car att\": \"N\",\n    \"Product description affinity\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Product Id\": \"030328700VC\",\n    \"Product description prod EN\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Code Person\": \"00\",\n    \"Circuit code\": \"V\",\n    \"Circuit detail\": \"VISA\",\n    \"Validity state\": \"V\",\n    \"Account holder name ana\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Source subsystems ana\": \"C\",\n    \"Expense limit ana\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Offline block type\": null,\n    \"Offline block date\": null,\n    \"Offline block description\": null,\n    \"Car attivazione\": \"N\"\n  },\n  {\n    \"Fiscal code\": \"BSCFNC77A41F205Y\",\n    \"Bin\": \"497018\",\n    \"Tail\": \"2027\",\n    \"Processor\": \"S\",\n    \"Affinity\": \"87\",\n    \"ABI\": \"03032\",\n    \"Pan alias\": \"0100000900275998\",\n    \"SMSMobile\": \"SMS mobile not linked!\",\n    \"ACSMobile\": \"ACS mobile not linked!\",\n    \"Username\": \"\",\n    \"User type\": \"\",\n    \"Account\": \"\",\n    \"User Id\": \"\",\n    \"Iam Id\": \"\",\n    \"Cod-Rap\": \"030320008086\",\n    \"Expiring date\": \"2027-11-30\",\n    \"PIVA\": \"01600950842\",\n    \"Bank Name\": \"CREDITO EMILIANO SPA\",\n    \"Position Id\": \"8086\",\n    \"Account holder name posi\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Bank account\": null,\n    \"Expense limit posi\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Source subsystem posi\": \"C\",\n    \"Validity state posi\": \"V\",\n    \"Source subsytem car\": \"C\",\n    \"Validity start date\": \"2023-01-17\",\n    \"Car att\": \"N\",\n    \"Product description affinity\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Product Id\": \"030328700VC\",\n    \"Product description prod EN\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Code Person\": \"00\",\n    \"Circuit code\": \"V\",\n    \"Circuit detail\": \"VISA\",\n    \"Validity state\": \"V\",\n    \"Account holder name ana\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Source subsystems ana\": \"C\",\n    \"Expense limit ana\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Offline block type\": null,\n    \"Offline block date\": null,\n    \"Offline block description\": null,\n    \"Car attivazione\": \"N\"\n  },\n  {\n    \"Fiscal code\": \"BSCMRA82A41F205O\",\n    \"Bin\": \"497018\",\n    \"Tail\": \"8130\",\n    \"Processor\": \"S\",\n    \"Affinity\": \"87\",\n    \"ABI\": \"03032\",\n    \"Pan alias\": \"0100000900275964\",\n    \"SMSMobile\": \"SMS mobile not linked!\",\n    \"ACSMobile\": \"ACS mobile not linked!\",\n    \"Username\": \"\",\n    \"User type\": \"\",\n    \"Account\": \"\",\n    \"User Id\": \"\",\n    \"Iam Id\": \"\",\n    \"Cod-Rap\": \"030320008087\",\n    \"Expiring date\": \"2027-11-30\",\n    \"PIVA\": \"01600950842\",\n    \"Bank Name\": \"CREDITO EMILIANO SPA\",\n    \"Position Id\": \"8087\",\n    \"Account holder name posi\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Bank account\": null,\n    \"Expense limit posi\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Source subsystem posi\": \"C\",\n    \"Validity state posi\": \"V\",\n    \"Source subsytem car\": \"C\",\n    \"Validity start date\": \"2023-01-17\",\n    \"Car att\": \"N\",\n    \"Product description affinity\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Product Id\": \"030328700VC\",\n    \"Product description prod EN\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Code Person\": \"00\",\n    \"Circuit code\": \"V\",\n    \"Circuit detail\": \"VISA\",\n    \"Validity state\": \"V\",\n    \"Account holder name ana\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Source subsystems ana\": \"C\",\n    \"Expense limit ana\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Offline block type\": null,\n    \"Offline block date\": null,\n    \"Offline block description\": null,\n    \"Car attivazione\": \"N\"\n  },\n  {\n    \"Fiscal code\": \"SPENLC47A41F205V\",\n    \"Bin\": \"497018\",\n    \"Tail\": \"4170\",\n    \"Processor\": \"S\",\n    \"Affinity\": \"87\",\n    \"ABI\": \"03032\",\n    \"Pan alias\": \"0100000900276001\",\n    \"SMSMobile\": \"SMS mobile not linked!\",\n    \"ACSMobile\": \"ACS mobile not linked!\",\n    \"Username\": \"\",\n    \"User type\": \"\",\n    \"Account\": \"\",\n    \"User Id\": \"\",\n    \"Iam Id\": \"\",\n    \"Cod-Rap\": \"030320008088\",\n    \"Expiring date\": \"2027-11-30\",\n    \"PIVA\": \"01600950842\",\n    \"Bank Name\": \"CREDITO EMILIANO SPA\",\n    \"Position Id\": \"8088\",\n    \"Account holder name posi\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Bank account\": null,\n    \"Expense limit posi\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Source subsystem posi\": \"C\",\n    \"Validity state posi\": \"V\",\n    \"Source subsytem car\": \"C\",\n    \"Validity start date\": \"2023-01-17\",\n    \"Car att\": \"N\",\n    \"Product description affinity\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Product Id\": \"030328700VC\",\n    \"Product description prod EN\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Code Person\": \"00\",\n    \"Circuit code\": \"V\",\n    \"Circuit detail\": \"VISA\",\n    \"Validity state\": \"V\",\n    \"Account holder name ana\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Source subsystems ana\": \"C\",\n    \"Expense limit ana\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Offline block type\": null,\n    \"Offline block date\": null,\n    \"Offline block description\": null,\n    \"Car attivazione\": \"N\"\n  },\n  {\n    \"Fiscal code\": \"CPARRT65A41F205J\",\n    \"Bin\": \"497018\",\n    \"Tail\": \"5867\",\n    \"Processor\": \"S\",\n    \"Affinity\": \"87\",\n    \"ABI\": \"03032\",\n    \"Pan alias\": \"0100000900275974\",\n    \"SMSMobile\": \"SMS mobile not linked!\",\n    \"ACSMobile\": \"ACS mobile not linked!\",\n    \"Username\": \"\",\n    \"User type\": \"\",\n    \"Account\": \"\",\n    \"User Id\": \"\",\n    \"Iam Id\": \"\",\n    \"Cod-Rap\": \"030320008089\",\n    \"Expiring date\": \"2027-11-30\",\n    \"PIVA\": \"01600950842\",\n    \"Bank Name\": \"CREDITO EMILIANO SPA\",\n    \"Position Id\": \"8089\",\n    \"Account holder name posi\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Bank account\": null,\n    \"Expense limit posi\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Source subsystem posi\": \"C\",\n    \"Validity state posi\": \"V\",\n    \"Source subsytem car\": \"C\",\n    \"Validity start date\": \"2023-01-17\",\n    \"Car att\": \"N\",\n    \"Product description affinity\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Product Id\": \"030328700VC\",\n    \"Product description prod EN\": \"DEBIT LARGE BUSINESS DEBIT BUSINESS XL\",\n    \"Code Person\": \"00\",\n    \"Circuit code\": \"V\",\n    \"Circuit detail\": \"VISA\",\n    \"Validity state\": \"V\",\n    \"Account holder name ana\": \"AZIENDA ITTICA SAN GIORGIO\",\n    \"Source subsystems ana\": \"C\",\n    \"Expense limit ana\": {\n      \"value\": 0,\n      \"currency\": \"EUR\"\n    },\n    \"Offline block type\": null,\n    \"Offline block date\": null,\n    \"Offline block description\": null,\n    \"Car attivazione\": \"N\"\n  }]",
			"type": "string"
		},
		{
			"key": "RESULT",
			"value": ""
		},
		{
			"key": "RESULT1",
			"value": ""
		},
		{
			"key": "RESULT2",
			"value": ""
		},
		{
			"key": "RESULT3",
			"value": "",
			"type": "string"
		},
		{
			"key": "RESULT4",
			"value": "",
			"type": "string"
		},
		{
			"key": "RESULT5",
			"value": ""
		},
		{
			"key": "RESULT6",
			"value": ""
		},
		{
			"key": "RESULT7",
			"value": ""
		},
		{
			"key": "RESULT8",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "{{apigwServer}}/mt-services"
		},
		{
			"key": "contactCenterUrl",
			"value": "{{contactCenterServer}}/api/services/helpdesk-service/helpdesk/public/contact-center",
			"type": "string"
		},
		{
			"key": "MT_APPLICATION",
			"value": "{{MT_APPLICATION_ENV}}"
		},
		{
			"key": "MT_CHANNEL",
			"value": "{{MT_CHANNEL_ENV}}"
		},
		{
			"key": "MT_COMPANY",
			"value": "{{MT_COMPANY_ENV}}"
		},
		{
			"key": "MT_COMPANY_GROUP",
			"value": "{{MT_COMPANY_GROUP_ENV}}"
		},
		{
			"key": "MT_PARTNER",
			"value": "{{MT_PARTNER_ENV}}"
		},
		{
			"key": "MT_REQUEST_ID",
			"value": "{{MT_REQUEST_ID_ENV}}"
		},
		{
			"key": "MT_SESSION_ID",
			"value": "{{MT_SESSION_ID_ENV}}"
		},
		{
			"key": "templateAnagCarte",
			"value": "Insert into ptcm_obj.TBPTCM_ANAG_CARTE (\n  NU_AAMM, CO_GRP, CO_CMPY, CO_PROC, \n  CO_PIVA, CO_EN, TE_EN, CO_POSI, NM_POSI, \n  CO_CC, CO_RAP, VA_LIM_UTI_POSI, CO_SIS_FONTE_POSI, \n  CO_ST_VLD_POSI, TE_ST_POSI, DT_VAR_ST_VLD_POSI, \n  CO_CAR_ALIAS, CO_BIN, CO_TAIL, CO_SIS_FONTE_CAR, \n  DT_INI_VLD_CAR, DT_FIN_VLD_CAR, \n  FL_CAR_ATT, CO_AFFINITY, TE_AFFINITY, \n  ID_PROD, TE_PROD_EN, CO_PERS_PROD, \n  CO_CIR, TE_CIR, CO_ST_VLD_CAR, TE_ST_CAR, \n  DT_VAR_ST_VLD_CAR, NM_ANA, CO_SIS_FONTE_ANA, \n  CO_FIS, VA_LIM_UTI_ANA, CO_TP_BLC_CAR, \n  DT_BLC_CAR, TE_TP_BLC_CAR, TS_REC, \n  FL_CAR_ATTIVAZIONE\n) \nvalues \n  (\n    202301, \n    'NEXI', \n    'NEXI', \n    '[[CO_PROC]]', \n    '[[CO_PIVA]]', \n    '[[CO_EN]]', \n    '[[TE_EN]]', \n    '[[CO_POSI]]', \n    '[[NM_POSI]]', \n    '[[CO_CC]]', \n    '[[CO_RAP]]', \n    '[[VA_LIM_UTI_POSI]]', \n    '[[CO_SIS_FONTE_POSI]]', \n    '[[CO_ST_VLD_POSI]]', \n    'Posizione Valida', \n    to_date('10-JAN-23', 'DD-MON-RR'), \n    '[[CO_CAR_ALIAS]]', \n    '[[CO_BIN]]', \n    '[[CO_TAIL]]', \n    '[[CO_SIS_FONTE_CAR]]', \n    to_date(\n      '[[DT_INI_VLD_CAR]]', 'DD-MON-RR'\n    ), \n    to_date(\n      '[[DT_FIN_VLD_CAR]]', 'DD-MON-RR'\n    ), \n    '[[FL_CAR_ATT]]', \n    '[[CO_AFFINITY]]', \n    '[[TE_AFFINITY]]', \n    '[[ID_PROD]]', \n    '[[TE_PROD_EN]]', \n    '[[CO_PERS_PROD]]', \n    '[[CO_CIR]]', \n    '[[TE_CIR]]', \n    '[[CO_ST_VLD_CAR]]', \n    'Carta Valida', \n    to_date('10-JAN-23', 'DD-MON-RR'), \n    '[[NM_ANA]]', \n    '[[CO_SIS_FONTE_ANA]]', \n    '[[CO_FIS]]', \n    '[[VA_LIM_UTI_ANA]]', \n    '[[CO_TP_BLC_CAR]]', \n    '[[DT_BLC_CAR]]', \n    '[[TE_TP_BLC_CAR]]', \n    '', \n    '[[FL_CAR_ATTIVAZIONE]]'\n  );\n",
			"type": "string"
		},
		{
			"key": "templateMovimCarte",
			"value": "Insert into PTCM_OBJ.tbptcm_movim_carte (\n  NU_AAMM, CO_GRP, CO_CMPY, CO_PROC, \n  CO_PIVA, CO_POSI, CO_SIS_FONTE_POSI, \n  CO_EN, TE_EN, CO_CAR_ALIAS, CO_BIN, \n  CO_TAIL, CO_SIS_FONTE_CAR, CO_AFFINITY, \n  TE_AFFINITY, CO_CIR, TE_CIR, ID_MACRO_CTG_3, \n  TE_MACRO_CTG_3, CO_SIS_FONTE_ANA, \n  NM_ANA, CO_FIS, NU_AAMM_0, NU_MOV_0, \n  VA_MOV_RIF_0, NU_AAMM_1, NU_MOV_1, \n  VA_MOV_RIF_1, NU_AAMM_2, NU_MOV_2, \n  VA_MOV_RIF_2, NU_AAMM_3, NU_MOV_3, \n  VA_MOV_RIF_3, NU_AAMM_4, NU_MOV_4, \n  VA_MOV_RIF_4, NU_AAMM_5, NU_MOV_5, \n  VA_MOV_RIF_5, NU_AAMM_6, NU_MOV_6, \n  VA_MOV_RIF_6, NU_AAMM_7, NU_MOV_7, \n  VA_MOV_RIF_7, NU_AAMM_8, NU_MOV_8, \n  VA_MOV_RIF_8, NU_AAMM_9, NU_MOV_9, \n  VA_MOV_RIF_9, NU_AAMM_10, NU_MOV_10, \n  VA_MOV_RIF_10, NU_AAMM_11, NU_MOV_11, \n  VA_MOV_RIF_11, NU_AAMM_12, NU_MOV_12, \n  VA_MOV_RIF_12, TS_REC\n) \nvalues \n  (\n    202301, \n    'NEXI', \n    'NEXI', \n    '[[CO_PROC]]', \n    '[[CO_PIVA]]', \n    '[[CO_POSI]]', \n    '[[CO_SIS_FONTE_POSI]]', \n    '[[CO_EN]]', \n    '[[TE_EN]]', \n    '[[CO_CAR_ALIAS]]', \n    '[[CO_BIN]]', \n    '[[CO_TAIL]]', \n    '[[CO_SIS_FONTE_CAR]]', \n    '[[CO_AFFINITY]]', \n    '[[TE_AFFINITY]]', \n    '[[CO_CIR]]', \n    'MASTERCARD', \n    '6', \n    'SUPERMERCATI', \n    '[[CO_SIS_FONTE_ANA]]', \n    '[[NM_ANA]]', \n    '[[CO_FIS]]', \n    202301, \n    0, \n    0, \n    202212, \n    0, \n    0, \n    202211, \n    0, \n    0, \n    202210, \n    0, \n    0, \n    202209, \n    0, \n    0, \n    202208, \n    0, \n    0, \n    202207, \n    0, \n    0, \n    202206, \n    0, \n    0, \n    202205, \n    0, \n    0, \n    202204, \n    0, \n    0, \n    202203, \n    0, \n    0, \n    202202, \n    0, \n    0, \n    202201, \n    0, \n    0, \n    to_timestamp(\n      '10-JAN-23 11.24.16.000000000', \n      'DD-MON-RR HH24.MI.SS.FF'\n    )\n  );\n",
			"type": "string"
		},
		{
			"key": "placeholders",
			"value": "{\n    \"Fiscal code\": \"[[CO_FIS]]\",\n    \"Bin\": \"[[CO_BIN]]\",\n    \"Tail\": \"[[CO_TAIL]]\",    \n    \"Processor\": \"[[CO_PROC]]\", \n    \"Affinity\": \"[[CO_AFFINITY]]\",\n    \"ABI\": \"[[CO_EN]]\",\n    \"Position Id\": \"[[CO_POSI]]\",\n    \"Pan alias\": \"[[CO_CAR_ALIAS]]\",\n    \"Cod-Rap\": \"[[CO_RAP]]\",\n    \"Expiring date\": \"[[DT_FIN_VLD_CAR]]\",\n    \"Validity start date\": \"[[DT_INI_VLD_CAR]]\",\n    \"PIVA\": \"[[CO_PIVA]]\",\n    \"Bank Name\": \"[[TE_EN]]\",\n    \"Account holder name posi\": \"[[NM_POSI]]\",\n    \"Account holder name\": \"[[NM_POSI]]\",\n    \"Bank account\": \"[[CO_CC]]\",\n    \"Expense limit posi\": \"[[VA_LIM_UTI_POSI]]\",\n    \"Source subsystem posi\": \"[[CO_SIS_FONTE_POSI]]\",\n    \"Validity state posi\": \"[[CO_ST_VLD_POSI]]\", \n    \"Source subsytem car\": \"[[CO_SIS_FONTE_CAR]]\",\n    \"Validity start date\": \"[[DT_INI_VLD_CAR]]\",\n    \"Product description affinity\": \"[[TE_AFFINITY]]\",\n    \"Product Id\": \"[[ID_PROD]]\",\n    \"Product description prod EN\": \"[[TE_PROD_EN]]\",\n    \"Code Person\": \"[[CO_PERS_PROD]]\",\n    \"Circuit code\": \"[[CO_CIR]]\",\n    \"Circuit detail\": \"[[TE_CIR]]\",\n    \"Validity state\": \"[[CO_ST_VLD_CAR]]\",\n    \"Account holder name\": \"[[NM_ANA]]\",\n    \"Account holder name ana\": \"[[NM_ANA]]\",\n    \"Source subsystems ana\": \"[[CO_SIS_FONTE_ANA]]\",\n    \"Expense limit ana\": \"[[VA_LIM_UTI_ANA]]\",\n    \"Offline block type\": \"[[CO_TP_BLC_CAR]]\",\n    \"Offline block date\": \"[[DT_BLC_CAR]]\",\n    \"Offline block description\": \"[[TE_TP_BLC_CAR]]\"\n}",
			"type": "string"
		},
		{
			"key": "placeholdersExceptions",
			"value": "{   \n    \"Car att\": {\"placeholder\":\"[[FL_CAR_ATT]]\",\"value\": \"S\"},\n    \"Car attivazione\": {\"placeholder\":\"[[FL_CAR_ATTIVAZIONE]]\",\"value\": \"S\"}\n}",
			"type": "string"
		},
		{
			"key": "defaultResultVariableName",
			"value": "RESULT",
			"type": "string"
		},
		{
			"key": "pagination",
			"value": "1",
			"type": "string"
		},
		{
			"key": "resultPageSize",
			"value": "3",
			"type": "string"
		},
		{
			"key": "dataList",
			"value": ""
		},
		{
			"key": "currentResultVariableName",
			"value": ""
		},
		{
			"key": "dataFullLength",
			"value": ""
		},
		{
			"key": "currentDataProcessIndex",
			"value": ""
		},
		{
			"key": "accountData",
			"value": ""
		},
		{
			"key": "anagCarte",
			"value": ""
		},
		{
			"key": "movimCarte",
			"value": ""
		},
		{
			"key": "anagCarteWithExceptions",
			"value": ""
		}
	]
}